mvdtool
=======

Utility for working with demos in MVD format for Quake 2.

The following modes of operation are supported:

* strings — prints text messages from demo along with timestamps
* split — splits demo into multiple files based on timestamps given
* cut — removes parts of demo based on timestamps given

Developer modes:

* convert — translates demo blocks between binary and plain text formats
* hash — computes and prints SHA-1 hashes of binary demo blocks

Download
--------

mvdtool utility is distributed under the terms of BSD-like license.

* Source code: [mvdtool-source.tar.gz][1]
* Win32 build: [mvdtool.exe][2]
* Files used as an example: [mvdtool-example.zip][3]

[1]: http://skuller.net/mvdtool/mvdtool-source.tar.gz
[2]: http://skuller.net/mvdtool/mvdtool.exe
[3]: http://skuller.net/mvdtool/mvdtool-example.zip

Syntax
------

    mvdtool <mode> [options ...]
    mvdtool strings [input_demo] [output_log]
    mvdtool split <input_demo> <start_time,end_time@output_demo> [...]
    mvdtool cut <input_demo> <output_demo> <start_time,end_time> [...]
    mvdtool convert [input_demo] [output_demo]
    mvdtool hash [input_demo] [output_log]

Timestamps can be specified in one of the following formats:

* N — raw block number
* SS.F, where SS are seconds, F are tenths of second
* MM:SS, where MM are minutes, SS are seconds
* MM:SS.F, where MM are minutes, SS are seconds, F are tenths of second

Timestamps are absolute: they are counted from beginning of the demo and
monotonically increase throught map changes.  For converting between block
numbers and timestamps it is needed to account that one block lasts one tenth
of second (demos are recorded at fixed frame rate of 10 FPS).

Both input and output files can be omitted if syntax allows, or the special
argument ‘-’ can be used instead, in this case stdin/stdout streams will be
used.

Usage example
-------------

Suppose we need to split the demo consisting of 4 consecutive played matches
into separate files, and remove in-game timeouts from resulting files.

As a first step a log file of text messages from demo should be obtained:

    $ mvdtool strings 4fun-cccp.mvd2 4fun-cccp.txt

Resulting contents of 4fun-cccp.txt:

    [0:00.0] -----------------------
    [0:00.0] The Edge
    [0:02.6] [CCCP]AONE ate 4fun]rasK's rocket
    [0:03.1] [CCCP]AONE: and
    [0:07.1] wision: and what
    [0:07.8] [CCCP]AONE: tell all maps
    <...>
    [5:10.1] All players ready! Starting countdown (15 secs)...
    <...>
    [23:11.6] Timelimit hit. Match ended.
    [23:11.6] Gents wins, 39 to 33.
    [23:16.6] Please report any bugs at www.opentdm.net.
    <...>

From the above log it is known that for the first played map all blocks in
range [5:10.1, 23:16.6) should be taken. For the remaining maps the method of
searching the needed range is similar.  Then we format the command line for the
‘split’ mode of operation:

    $ mvdtool split 4fun-cccp.mvd2 5:10.1,23:16.5@4fun-cccp-dm1-uncut.mvd2 \
                                   24:20.0,39:39.9@4fun-cccp-match1.mvd2 \
                                   43:43.5,59:03.4@4fun-cccp-ztn3.mvd2 \
                                   60:00.0,75:19.9@4fun-cccp-dm3.mvd2

From the log we know that there were 2 timeouts in the first played map that
should be removed.  A new log should be created for the first map since
timestamps have shifted after splitting:

    $ mvdtool strings 4fun-cccp-dm1-uncut.mvd2 4fun-cccp-dm1-uncut.txt

Resulting contents of 4fun-cccp-dm1-uncut.txt:

    <...>
    [7:37.8] [CCCP]SHUUGGHH (Ladies) called a time out. Match will resume automatically in 5:00.
    [7:42.8] Game resuming in 10 seconds. Match time remaining: 7:37
    [7:43.6] [CCCP]SHUUGGHH: ok
    [7:48.2] 5
    [7:49.2] 4
    [7:50.2] 3
    [7:51.2] 2
    [7:52.2] 1
    [7:53.2] Fight!
    <...>

To remove the first timeout all blocks in range [7:37.8, 7:53.2] should be
removed.  For remaining timeout the method of searching the needed range is
similar.  Then we format the command line for the ‘cut’ mode of operation:

    $ mvdtool cut 4fun-cccp-dm1-uncut.mvd2 4fun-cccp-dm1.mvd2 7:37.8,7:53.2 9:12.1,11:43.2 

Now we are done.
